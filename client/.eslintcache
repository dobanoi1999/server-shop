[{"/home/dobanoi/Desktop/e-commerce/client/src/index.js":"1","/home/dobanoi/Desktop/e-commerce/client/src/App.js":"2","/home/dobanoi/Desktop/e-commerce/client/src/globalCss.js":"3","/home/dobanoi/Desktop/e-commerce/client/src/redux/store.js":"4","/home/dobanoi/Desktop/e-commerce/client/src/api/authApi.js":"5","/home/dobanoi/Desktop/e-commerce/client/src/api/productApi.js":"6","/home/dobanoi/Desktop/e-commerce/client/src/redux/action/cart.js":"7","/home/dobanoi/Desktop/e-commerce/client/src/redux/action/product.js":"8","/home/dobanoi/Desktop/e-commerce/client/src/api/cartApi.js":"9","/home/dobanoi/Desktop/e-commerce/client/src/component/index.js":"10","/home/dobanoi/Desktop/e-commerce/client/src/api/categoryApi.js":"11","/home/dobanoi/Desktop/e-commerce/client/src/redux/reducers/index.js":"12","/home/dobanoi/Desktop/e-commerce/client/src/component/common/PrivateRoute.js":"13","/home/dobanoi/Desktop/e-commerce/client/src/component/common/LoggedRoute.js":"14","/home/dobanoi/Desktop/e-commerce/client/src/redux/action/category.js":"15","/home/dobanoi/Desktop/e-commerce/client/src/api/axiosClient.js":"16","/home/dobanoi/Desktop/e-commerce/client/src/component/Category/Category.js":"17","/home/dobanoi/Desktop/e-commerce/client/src/component/CreateProduct/CreateProduct.js":"18","/home/dobanoi/Desktop/e-commerce/client/src/component/ListCart/Cart.js":"19","/home/dobanoi/Desktop/e-commerce/client/src/component/CheckOut/CheckOut.js":"20","/home/dobanoi/Desktop/e-commerce/client/src/redux/reducers/auth.js":"21","/home/dobanoi/Desktop/e-commerce/client/src/redux/reducers/product.js":"22","/home/dobanoi/Desktop/e-commerce/client/src/redux/reducers/category.js":"23","/home/dobanoi/Desktop/e-commerce/client/src/redux/reducers/cart.js":"24","/home/dobanoi/Desktop/e-commerce/client/src/redux/reducers/order.js":"25","/home/dobanoi/Desktop/e-commerce/client/src/component/product/ProductList/productList.js":"26","/home/dobanoi/Desktop/e-commerce/client/src/component/header/header.jsx":"27","/home/dobanoi/Desktop/e-commerce/client/src/component/Order/Order.jsx":"28","/home/dobanoi/Desktop/e-commerce/client/src/component/Order/OrderDetail/OrderDetail.jsx":"29","/home/dobanoi/Desktop/e-commerce/client/src/component/History/History.jsx":"30","/home/dobanoi/Desktop/e-commerce/client/src/component/UpdateProduct/UpdateProduct.jsx":"31","/home/dobanoi/Desktop/e-commerce/client/src/component/History/HistoryDetail/HistoryDetail.jsx":"32","/home/dobanoi/Desktop/e-commerce/client/src/component/product/ProductDetail/productDetail.jsx":"33","/home/dobanoi/Desktop/e-commerce/client/src/component/auth/loginForm/loginForm.jsx":"34","/home/dobanoi/Desktop/e-commerce/client/src/component/auth/register/register.jsx":"35","/home/dobanoi/Desktop/e-commerce/client/src/component/Category/Category.element.js":"36","/home/dobanoi/Desktop/e-commerce/client/src/component/CreateProduct/CreateProduct.element.js":"37","/home/dobanoi/Desktop/e-commerce/client/src/component/ListCart/Cart.element.js":"38","/home/dobanoi/Desktop/e-commerce/client/src/component/CheckOut/CheckOut.element.js":"39","/home/dobanoi/Desktop/e-commerce/client/src/component/product/ProductList/productList.element.js":"40","/home/dobanoi/Desktop/e-commerce/client/src/component/product/ProductItem/productItem.js":"41","/home/dobanoi/Desktop/e-commerce/client/src/component/header/header.element.js":"42","/home/dobanoi/Desktop/e-commerce/client/src/component/Order/Order.element.js":"43","/home/dobanoi/Desktop/e-commerce/client/src/component/Order/OrderDetail/OrderDetail.element.js":"44","/home/dobanoi/Desktop/e-commerce/client/src/component/product/ProductDetail/productDetail.element.js":"45","/home/dobanoi/Desktop/e-commerce/client/src/component/auth/loginForm/loginForm.element.js":"46","/home/dobanoi/Desktop/e-commerce/client/src/api/orderApi.js":"47","/home/dobanoi/Desktop/e-commerce/client/src/redux/action/order.js":"48","/home/dobanoi/Desktop/e-commerce/client/src/component/product/ProductItem/productItem.element.js":"49","/home/dobanoi/Desktop/e-commerce/client/src/component/CartItem/CartItem.js":"50","/home/dobanoi/Desktop/e-commerce/client/src/component/shared/Toast/Toast.js":"51","/home/dobanoi/Desktop/e-commerce/client/src/api/historyApi.js":"52","/home/dobanoi/Desktop/e-commerce/client/src/hooks/useForm.js":"53","/home/dobanoi/Desktop/e-commerce/client/src/component/CartItem/CartItem.element.js":"54"},{"size":387,"mtime":1623042906521,"results":"55","hashOfConfig":"56"},{"size":3893,"mtime":1623068645834,"results":"57","hashOfConfig":"56"},{"size":1954,"mtime":1623047377980,"results":"58","hashOfConfig":"56"},{"size":254,"mtime":1623042906521,"results":"59","hashOfConfig":"56"},{"size":570,"mtime":1623042906517,"results":"60","hashOfConfig":"56"},{"size":644,"mtime":1623042906517,"results":"61","hashOfConfig":"56"},{"size":546,"mtime":1623042906521,"results":"62","hashOfConfig":"56"},{"size":738,"mtime":1623068041662,"results":"63","hashOfConfig":"56"},{"size":677,"mtime":1623042906517,"results":"64","hashOfConfig":"56"},{"size":912,"mtime":1623042906517,"results":"65","hashOfConfig":"56"},{"size":548,"mtime":1623042906517,"results":"66","hashOfConfig":"56"},{"size":423,"mtime":1623042906521,"results":"67","hashOfConfig":"56"},{"size":461,"mtime":1623042906517,"results":"68","hashOfConfig":"56"},{"size":435,"mtime":1623042906517,"results":"69","hashOfConfig":"56"},{"size":512,"mtime":1623042906521,"results":"70","hashOfConfig":"56"},{"size":700,"mtime":1623044536945,"results":"71","hashOfConfig":"56"},{"size":5810,"mtime":1623042906517,"results":"72","hashOfConfig":"56"},{"size":5046,"mtime":1623042906517,"results":"73","hashOfConfig":"56"},{"size":1502,"mtime":1623072871986,"results":"74","hashOfConfig":"56"},{"size":7673,"mtime":1623073360744,"results":"75","hashOfConfig":"56"},{"size":460,"mtime":1623042906521,"results":"76","hashOfConfig":"56"},{"size":1454,"mtime":1623074236405,"results":"77","hashOfConfig":"56"},{"size":697,"mtime":1623042906521,"results":"78","hashOfConfig":"56"},{"size":601,"mtime":1623042906521,"results":"79","hashOfConfig":"56"},{"size":428,"mtime":1623042906521,"results":"80","hashOfConfig":"56"},{"size":2673,"mtime":1623069735582,"results":"81","hashOfConfig":"56"},{"size":2650,"mtime":1623042906517,"results":"82","hashOfConfig":"56"},{"size":2314,"mtime":1623042906517,"results":"83","hashOfConfig":"56"},{"size":2284,"mtime":1623070108743,"results":"84","hashOfConfig":"56"},{"size":2467,"mtime":1623042906517,"results":"85","hashOfConfig":"56"},{"size":752,"mtime":1623068872719,"results":"86","hashOfConfig":"56"},{"size":2167,"mtime":1623042906517,"results":"87","hashOfConfig":"56"},{"size":2104,"mtime":1623068877171,"results":"88","hashOfConfig":"56"},{"size":1449,"mtime":1623047706029,"results":"89","hashOfConfig":"56"},{"size":1266,"mtime":1623047717425,"results":"90","hashOfConfig":"56"},{"size":1546,"mtime":1623042906517,"results":"91","hashOfConfig":"56"},{"size":975,"mtime":1623042906517,"results":"92","hashOfConfig":"56"},{"size":1013,"mtime":1623071533940,"results":"93","hashOfConfig":"56"},{"size":1454,"mtime":1623073086821,"results":"94","hashOfConfig":"56"},{"size":235,"mtime":1623042906517,"results":"95","hashOfConfig":"56"},{"size":3363,"mtime":1623042906517,"results":"96","hashOfConfig":"56"},{"size":2030,"mtime":1623042906517,"results":"97","hashOfConfig":"56"},{"size":1734,"mtime":1623042906517,"results":"98","hashOfConfig":"56"},{"size":1121,"mtime":1623042906517,"results":"99","hashOfConfig":"56"},{"size":1121,"mtime":1623042906517,"results":"100","hashOfConfig":"56"},{"size":658,"mtime":1623042906517,"results":"101","hashOfConfig":"56"},{"size":517,"mtime":1623042906517,"results":"102","hashOfConfig":"56"},{"size":333,"mtime":1623042906521,"results":"103","hashOfConfig":"56"},{"size":1362,"mtime":1623047420345,"results":"104","hashOfConfig":"56"},{"size":2284,"mtime":1623072701583,"results":"105","hashOfConfig":"56"},{"size":412,"mtime":1623042906521,"results":"106","hashOfConfig":"56"},{"size":441,"mtime":1623042906517,"results":"107","hashOfConfig":"56"},{"size":1039,"mtime":1623042906521,"results":"108","hashOfConfig":"56"},{"size":1121,"mtime":1623072823086,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1q96ibd",{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"112"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"/home/dobanoi/Desktop/e-commerce/client/src/index.js",[],["226","227"],"/home/dobanoi/Desktop/e-commerce/client/src/App.js",["228","229"],"import cartApi from 'api/cartApi';\nimport categoryApi from 'api/categoryApi';\nimport LoggedRoute from 'component/common/LoggedRoute';\nimport PrivateRoute from 'component/common/PrivateRoute';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ToastContainer, Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchCategory } from 'redux/action/category';\nimport authApi from './api/authApi';\nimport productApi from './api/productApi';\nimport {\n  Cart,\n  Category,\n  CheckOut,\n  CreateProduct,\n  Header,\n  Order,\n  OrderDetail,\n  LoginForm,\n  ProductDetail,\n  ProductList,\n  RegisterForm,\n  History,\n  HistoryDetail,\n  UpdateProduct\n} from './component';\nimport { getCart } from './redux/action/cart';\nimport { fetchProductList, fetchProductListFail, fetchProductListSuccess } from './redux/action/product';\n\nfunction App() {\n\n  Number.prototype.format = function (n, x) {\n    var re = '\\\\d(?=(\\\\d{' + (x || 3) + '})+' + (n > 0 ? '\\\\.' : '$') + ')';\n    return this.toFixed(Math.max(0, ~~n)).replace(new RegExp(re, 'g'), '$&,');\n  };\n  const dispatch = useDispatch()\n  const isLogged = useSelector(state => state.auth.isLogged)\n\n  const token = localStorage.getItem(\"token\")\n  const fetchProducts = () => {\n    dispatch(fetchProductList())\n    productApi.getAll()\n      .then(res => {\n\n        const { products } = res\n\n        dispatch(fetchProductListSuccess(products))\n      })\n      .catch(err => {\n        dispatch(fetchProductListFail(err.message))\n      })\n  }\n  const verify = () => {\n    authApi.verify()\n      .then(res => {\n        if (typeof res !== \"undefined\") {\n          dispatch({ type: \"LOGGED\", payload: res })\n        }\n      })\n      .catch(err => console.log(err))\n  }\n  const checkAdmin = () => {\n    authApi.getInfor()\n      .then(res => {\n\n        if (res?.user?.role === 1) {\n          dispatch({ type: \"SET_ADMIN\", payload: true })\n        } else {\n          dispatch({ type: \"SET_ADMIN\", payload: false })\n        }\n      })\n      .catch(err => console.log(err))\n  }\n  const fetchAllCategory = () => {\n    categoryApi.fetchAllCategory()\n      .then(res => {\n        dispatch(fetchCategory(res.categorys))\n      })\n      .catch(err => console.log(err))\n  }\n  const fetchCart = () => {\n\n    cartApi.getCart(token)\n      .then(res => {\n\n        if (res?.cart) {\n          dispatch(getCart(res.cart))\n        }\n\n      })\n      .catch(err => console.log(err))\n  }\n  useEffect(() => {\n\n    if (!isLogged && token) {\n      verify()\n      checkAdmin()\n    }\n    if (isLogged) {\n      fetchCart()\n      fetchAllCategory()\n    }\n    fetchProducts()\n  }, [isLogged])\n\n\n  return (\n    <>\n      <ToastContainer draggable={true} autoClose={6000} transition={Zoom} />\n      <Router>\n        <Header />\n\n        <Switch>\n          <PrivateRoute path=\"/category\" component={Category} />\n          <Route path=\"/\" exact component={ProductList} />\n\n          <Route path=\"/product/:id\" component={ProductDetail} />\n          <LoggedRoute path=\"/cart\" component={Cart} />\n\n          <Route path='/login' component={LoginForm} />\n          <LoggedRoute path='/checkout' component={CheckOut} />\n          <Route path='/register' component={RegisterForm} />\n          <LoggedRoute path='/my_order' exact component={Order} />\n          <LoggedRoute path='/my_order/:id' component={OrderDetail} />\n          <PrivateRoute path='/create_product' component={CreateProduct} />\n          <PrivateRoute path='/history' exact component={History} />\n          <PrivateRoute path='/history/:id' exact component={HistoryDetail} />\n          <PrivateRoute path='/update_product/:id' component={UpdateProduct} />\n          <Route component={() => <h1>not found</h1>} />\n        </Switch>\n\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/home/dobanoi/Desktop/e-commerce/client/src/globalCss.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/redux/store.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/api/authApi.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/api/productApi.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/redux/action/cart.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/redux/action/product.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/api/cartApi.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/index.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/api/categoryApi.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/redux/reducers/index.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/common/PrivateRoute.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/common/LoggedRoute.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/redux/action/category.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/api/axiosClient.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/Category/Category.js",["230"],"import categoryApi from 'api/categoryApi';\nimport Toast from 'component/shared/Toast/Toast';\nimport { Button } from 'globalCss';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { addCategory, removeCategory, updateCategory } from 'redux/action/category';\nimport { StyledWrapper, CategoryItem, CategoryName, ContainerOver, FormCreate, Input, ListCategory } from './Category.element';\n\nconst Category = () => {\n    const category = useSelector(state => state.category)\n    const dispatch = useDispatch()\n    const [sending, setSending] = useState(false)\n    const [cate, setCate] = useState({\n        name: \"\",\n        _id: \"\"\n    })\n    const [isCreate, setIsCreate] = useState(true)\n    const findIndex = (arr, id) => {\n        let index = -1\n        arr.map((i, indx) => {\n\n            if (i._id === id) {\n\n                return index = indx\n            }\n\n        })\n        return index;\n    }\n    const handleDelete = (id) => {\n        setSending(true)\n        if (window.confirm(\"Are you sure you want to delete?\")) {\n            categoryApi.delete(id)\n                .then(res => {\n                    setSending(false)\n                    if (res.status === 500) {\n                        return Toast.warn(res.data.msg)\n                    }\n                    if (res?.msg) {\n                        Toast.success(res.msg)\n                        dispatch(removeCategory(findIndex(category, id)))\n                    } else {\n                        Toast.error()\n                    }\n\n\n                })\n                .catch(err => console.log(err))\n        }\n    }\n\n    const handleCreate = () => {\n        if (cate.name === \"\") return\n        setSending(true)\n        categoryApi.create({ name: cate.name })\n            .then(res => {\n                setSending(false)\n                if (res.status === 500) {\n                    if (res?.data?.msg) {\n                        return Toast.warn(res.data.msg)\n                    }\n                    console.log(res)\n                    return Toast.error()\n                }\n\n                else if (res?.msg) {\n                    Toast.success(res.msg)\n                    dispatch(addCategory(res.category))\n\n                }\n            })\n            .catch(err => console.log(err))\n    }\n    const handleUpdate = () => {\n        if (cate.name === \"\") return\n        setSending(true)\n        const index = findIndex(category, cate._id)\n\n        categoryApi.update(cate._id, cate.name)\n            .then(res => {\n                setSending(false)\n                if (res?.msg) {\n                    Toast.success(res.msg)\n                    dispatch(updateCategory(cate.name, index))\n                } else {\n                    Toast.error()\n                }\n\n            })\n            .catch(err => console.log(err))\n\n    }\n\n    return (\n\n        <ContainerOver>\n            <StyledWrapper>\n                <FormCreate >\n                    <Input\n\n                        onChange={(e) => {\n\n                            setCate({\n                                ...cate,\n                                name: e.target.value\n\n                            })\n                        }} name=\"name\"\n                        value={cate.name}\n                        type=\"text\"\n                        required />\n                    {isCreate ?\n                        <Button\n                            disabled={sending}\n                            type=\"button\"\n                            bgColor=\"primary\"\n\n                            onClick={handleCreate}\n                        > Create </Button> :\n                        (<>\n                            <Button\n                                disabled={sending}\n                                type=\"button\"\n                                bgColor=\"#198754\"\n                                onClick={handleUpdate}\n                            > update\n                            </Button>\n                            <Button\n                                disabled={sending}\n                                type=\"button\"\n                                bgColor=\"cancel\"\n                                onClick={() => {\n                                    setCate({\n                                        name: \"\", _id: \"\"\n                                    })\n                                    setIsCreate(true)\n                                }}\n                            > cancel </Button>\n                        </>\n                        )\n                    }\n                </FormCreate>\n                <ListCategory>\n                    {category.map(i => {\n                        const dis = i._id === cate._id ? true : false\n                        return <CategoryItem key={i._id}>\n\n                            <CategoryName>{i.name}</CategoryName>\n                            <Button bgColor=\"cancel\" disabled={dis ? dis : sending} onClick={() => handleDelete(i._id)} >\n                                delete\n                                </Button>\n                            <Button\n                                disabled={sending}\n                                bgColor=\"#198754\"\n                                onClick={() => {\n\n                                    setCate({\n                                        name: i.name,\n                                        _id: i._id\n\n                                    })\n                                    setIsCreate(false)\n\n                                }} >update</Button>\n                        </CategoryItem>\n                    }\n                    )}\n                </ListCategory>\n\n            </StyledWrapper>\n        </ContainerOver>\n    )\n}\n\nexport default Category\n","/home/dobanoi/Desktop/e-commerce/client/src/component/CreateProduct/CreateProduct.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/ListCart/Cart.js",["231"],"import CartItem from 'component/CartItem/CartItem'\nimport { Button } from 'globalCss'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { BtnCheckOut, CheckOutContainer, ListCart, Total, Table } from './Cart.element'\nconst Cart = () => {\n    const history = useHistory()\n    const card = useSelector(state => state.cart)\n\n    let total = 0;\n    for (const i of card) {\n        total += i.product.price * i.quantity\n    }\n    if (!card || card?.length === 0) return <p style={{ fontSize: \"2rem\", textAlign: \"center\" }}>\n        There are no items in this cart</p>\n    return (\n        <ListCart>\n            <Table>\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>Name</th>\n                        <th>Price</th>\n                        <th>Count</th>\n                        <th>Action</th>\n                    </tr>\n\n                </thead>\n                <tbody>\n                    {card.map((i, index) => {\n                        return <CartItem key={i.product._id} index={index} card={i} />\n\n                    })}\n                </tbody>\n            </Table>\n            <CheckOutContainer>\n                <Total>Total ({card.length} item) :  ${total.format()}</Total>\n                <Button bgColor=\"primary\" onClick={() => history.push('/checkout')} >check out</Button>\n            </CheckOutContainer>\n        </ListCart>\n    )\n}\n\nexport default Cart\n","/home/dobanoi/Desktop/e-commerce/client/src/component/CheckOut/CheckOut.js",["232","233"],"import cartApi from 'api/cartApi'\nimport orderApi from 'api/orderApi'\nimport data from 'assets/data.json'\nimport { Modal } from 'component/product/ProductItem/productItem.element'\nimport Toast from 'component/shared/Toast/Toast'\nimport { Button } from 'globalCss'\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { getCart } from 'redux/action/cart'\nimport { addOrder } from 'redux/action/order'\nimport { AddressInfor, BtnAdd, CheckOutBtn, CheckOutContainer, Form, Head, ListItem, Name, Total } from './CheckOut.element'\n\n\nconst CheckOut = () => {\n    const card = useSelector(state => state.cart)\n    const history = useHistory()\n    const [toggle, setToggle] = useState(false)\n    const [err, setErr] = useState(\"\")\n    const dispatch = useDispatch()\n    const [address, setAddress] = useState({\n        name: \"\",\n        number: \"\",\n        province: \"\",\n        districts: \"\",\n        wards: \"\"\n\n    })\n    let districts = data[address.province]?.Districts || []\n\n    let wart = districts[address.districts]?.Wards || []\n\n    let total = 0;\n    for (const i of card) {\n        total += i.product.price * i.quantity\n    }\n    const verify = (arr) => {\n\n        for (const i in arr) {\n            if (arr[i] === \"\") {\n                setErr(\"Please fill all input\")\n                return false\n            }\n        }\n        if (isNaN(arr.number) || arr.number.length !== 10) {\n            setErr(\"Phone number must have 10 digits\")\n            return false\n        }\n\n\n        return true\n\n    }\n    const handleOnChange = e => {\n        const { name, value } = e.target\n        setErr(\"\")\n        setAddress({\n            ...address,\n            [name]: value\n        })\n    }\n    const handleCheckout = () => {\n        if (!verify(address)) return alert(\"please add address\")\n        const newAddress = `${data[+address.province].Name},\n        ${data[+address.province].Districts[+address.districts].Name},\n        ${data[+address.province].Districts[+address.districts].Wards[+address.wards].Name}`\n        orderApi.createOrder({\n            name: address.name,\n            phone: address.number,\n            address: newAddress,\n            total,\n            card\n        })\n            .then(res => {\n                if (res?.status === 500) return Toast.warn(res.data.msg)\n                dispatch(addOrder({\n                    name: address.name,\n                    phone: address.number,\n                    address: newAddress,\n                    total,\n                    card\n                }))\n                cartApi.remove()\n                    .then(res => {\n                        if (res?.msg === \"remove success\") {\n                            dispatch(getCart([]))\n                            history.push('/cart')\n                        }\n                    })\n                    .catch(err => console.log(err))\n\n            })\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <CheckOutContainer>\n            <h2>Address</h2>\n            <AddressInfor>\n\n                {address.province && address.districts && address.wards ?\n                    <>\n                        <Name>{address.name} ({address.number})</Name>\n                        <p>{data[+address.province].Name},\n                    {data[+address.province].Districts[+address.districts].Name},\n                    {data[+address.province].Districts[+address.districts].Wards[+address.wards].Name}</p>\n                    </>\n                    :\n                    \"\"}\n                <Button bgColor=\"primary\" onClick={() => setToggle(true)}>{address.name ? \"Edit\" : \"Add new\"}</Button>\n            </AddressInfor>\n            <Head >\n                <h2>List Product</h2>\n                <Total>Total: ${total.format()}</Total>\n            </Head>\n            <ListItem>\n\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Quantity</th>\n                        <th>Price</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {card.map(i => {\n                        return (\n                            <tr>\n                                <td>{i.product.title}</td>\n                                <td>{i.quantity}</td>\n                                <td>${(i.product.price * i.quantity).format()}</td>\n\n                            </tr>\n                        )\n                    })}\n\n                </tbody>\n            </ListItem>\n            <Button bgColor=\"primary\" style={{\n                float: \"right\"\n            }} onClick={handleCheckout}>Check Out</Button>\n            {toggle ? <Modal  >\n\n                <Form>\n                    <h2>Address Infor</h2>\n                    <input\n                        required\n                        placeholder=\"Your Name\"\n                        type=\"text\"\n                        name=\"name\"\n                        value={address.name}\n                        onChange={handleOnChange}\n                    />\n                    <input\n                        required\n                        placeholder=\"Phone Number\"\n                        type=\"text\"\n                        name=\"number\"\n                        value={address.number}\n                        onChange={handleOnChange}\n\n                    />\n\n                    <select\n                        value={address.province}\n                        onChange={handleOnChange}\n                        name='province'>\n                        <option value='' disabled>Select Province</option>\n                        {data.map((i, index) => {\n                            return <option\n                                value={index}\n                            >\n                                {i.Name}\n                            </option>\n                        })}\n\n                    </select>\n                    <select\n                        onChange={handleOnChange}\n                        value={address.districts}\n                        name=\"districts\"\n                    >\n                        <option value='' disabled>Select District</option>\n                        {\n\n                            districts.map((i, index) => {\n                                return <option\n                                    value={index}\n                                >\n                                    {i.Name}\n                                </option>\n                            })}\n                    </select>\n                    <select\n                        value={address.wards}\n                        onChange={handleOnChange}\n                        name=\"wards\"\n                    >\n                        <option value='' disabled>Select Ward</option>\n                        {wart.map((i, index) => {\n                            return <option\n                                value={index}\n                            >\n                                {i.Name}\n                            </option>\n                        })}\n                    </select>\n                    {err ? <p style={{ color: \"red\" }} >{err}</p> : \"\"}\n                    <Button bgColor=\"primary\" type=\"button\" onClick={(e) => {\n\n                        if (!verify(address)) return\n\n                        setToggle(false)\n                    }} >submit</Button>\n                    <Button bgColor=\"cancel\" type=\"button\" onClick={() => setToggle(false)} >Cancel</Button>\n\n                </Form>\n            </Modal> : \"\"}\n\n        </CheckOutContainer>\n    )\n}\n\nexport default CheckOut\n","/home/dobanoi/Desktop/e-commerce/client/src/redux/reducers/auth.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/redux/reducers/product.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/redux/reducers/category.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/redux/reducers/cart.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/redux/reducers/order.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/product/ProductList/productList.js",["234"],"import productApi from 'api/productApi'\nimport Toast from 'component/shared/Toast/Toast'\nimport { Button } from 'globalCss'\nimport React, { ReactDOM } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLocation } from 'react-router-dom'\nimport { fetchProductList } from 'redux/action/product'\nimport ProductItem from '../ProductItem/productItem'\nimport { ListProduct } from './productList.element'\nimport ContentLoader from 'react-content-loader'\nconst ProductList = () => {\n    const useQuery = () => {\n        return new URLSearchParams(useLocation().search)\n    }\n    let query = useQuery()\n    const search = query.get(\"search\")\n    let { data, loading, err } = useSelector(state => state.product)\n    const isAdmin = useSelector(state => state.auth.isAdmin)\n    const dispatch = useDispatch()\n\n\n    if (search) {\n        data = data.filter(i => {\n            return i.title.toLowerCase().indexOf(search.toLowerCase()) !== -1\n        })\n    }\n    const handleDeleteAll = () => {\n        if (window.confirm(\"delete all ?\")) {\n            productApi.deleteAll()\n                .then(res => {\n                    if (res.status === 500) return Toast.warn(res.data.msg)\n                    dispatch(fetchProductList([]))\n                })\n                .catch(err => console.log(err))\n        }\n    }\n\n    const fakeArr = [1, 2, 3, 4, 5, 6, 7, 8]\n\n    return (\n        <>\n            {isAdmin ? <Button\n                style={{\n                    marginTop: \"10px\",\n                    float: \"right\"\n\n                }}\n                bgColor=\"cancel\"\n                fontBig\n                onClick={handleDeleteAll}\n            >\n                Delete All\n            </Button> : \"\"}\n            <ListProduct>\n\n                {loading ? fakeArr.map(() => <ContentLoader\n                    width={300}\n                    height={300}\n                >\n                    <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"200\" height=\"200\" />\n                    <rect x=\"0\" y=\"210\" rx=\"5\" ry=\"5\" width=\"70\" height=\"10\" />\n                    <rect x=\"0\" y=\"230\" rx=\"4\" ry=\"4\" width=\"190\" height=\"30\" />\n                    <rect x=\"0\" y=\"280\" rx=\"3\" ry=\"3\" width=\"70\" height=\"10\" />\n                </ContentLoader>) : err ? <p>{err}</p>\n                    : data.map((product, index) => {\n                        return <ProductItem\n                            isAdmin={isAdmin}\n                            index={index}\n                            key={product._id}\n                            product={product}\n                        />\n                    })}\n\n            </ListProduct>\n        </>\n    )\n}\n\nexport default ProductList\n","/home/dobanoi/Desktop/e-commerce/client/src/component/header/header.jsx",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/Order/Order.jsx",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/Order/OrderDetail/OrderDetail.jsx",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/History/History.jsx",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/UpdateProduct/UpdateProduct.jsx",["235"],"import { CreateProduct } from \"component\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nconst UpdateProduct = () => {\n  const params = useParams();\n  const { data } = useSelector((state) => state.product);\n\n  const [product, setProduct] = useState();\n  const [index, setIndex] = useState(-1);\n  useEffect(() => {\n    if (params.id) {\n      data.map((i, index) => {\n        if (i._id === params.id) {\n          setIndex(index);\n          return setProduct(i);\n        }\n        return \"\";\n      });\n    }\n  }, [params]);\n  if (!product) return <p>not found</p>;\n  return <CreateProduct product={product} index={index} />;\n};\n\nexport default UpdateProduct;\n","/home/dobanoi/Desktop/e-commerce/client/src/component/History/HistoryDetail/HistoryDetail.jsx",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/product/ProductDetail/productDetail.jsx",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/auth/loginForm/loginForm.jsx",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/auth/register/register.jsx",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/Category/Category.element.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/CreateProduct/CreateProduct.element.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/ListCart/Cart.element.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/CheckOut/CheckOut.element.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/product/ProductList/productList.element.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/product/ProductItem/productItem.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/header/header.element.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/Order/Order.element.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/Order/OrderDetail/OrderDetail.element.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/product/ProductDetail/productDetail.element.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/auth/loginForm/loginForm.element.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/api/orderApi.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/redux/action/order.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/product/ProductItem/productItem.element.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/CartItem/CartItem.js",["236","237"],"import cartApi from 'api/cartApi'\nimport { Button } from 'globalCss'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { decreaseCart, deleteCart, increaseCart } from 'redux/action/cart'\nimport {\n    BtnDelete, CartItems,\n    Count, DecreaseBtn, Image,\n    IncreaseBtn, NumberItem, Price, Title\n} from './CartItem.element'\nconst CartItem = ({ card, index }) => {\n    const dispatch = useDispatch()\n    const { product, quantity } = card\n    const [loading, setLoading] = useState(false)\n    const dis = quantity === 1 ? true : false\n    const handleChangeQuality = (t) => {\n        setLoading(true)\n        cartApi.changeQuality(t, product._id)\n            .then(res => {\n\n                if (t === \"increase\") {\n                    dispatch(increaseCart(index))\n                } else {\n\n                    dispatch(decreaseCart(index))\n                }\n                setLoading(false)\n            })\n            .catch(err => setLoading(false))\n\n\n    }\n    const handleDelete = () => {\n        setLoading(true)\n        cartApi.deleteCart(product._id)\n            .then(res => {\n                console.log(res)\n                dispatch(deleteCart(index))\n                setLoading(false)\n            })\n            .catch(err => setLoading(false))\n    }\n    return (\n        <CartItems>\n            <td><Image src={product.image.url} /></td>\n            <td>            <Title>{product.title}</Title></td>\n            <td><Price>{product.price.format()}</Price></td>\n            <td><NumberItem>\n                <IncreaseBtn\n                    type=\"button\"\n                    disabled={dis || loading}\n                    onClick={() => handleChangeQuality(\"decrease\")}\n                >\n                    -\n                     </IncreaseBtn>\n                <Count>{quantity}</Count>\n                <DecreaseBtn\n                    type=\"button\"\n                    disabled={loading}\n                    onClick={() => handleChangeQuality(\"increase\")}\n                >\n                    +\n                     </DecreaseBtn>\n            </NumberItem></td>\n            <td><Button disabled={loading} bgColor=\"cancel\" onClick={handleDelete} >Delete</Button></td>\n        </CartItems>\n    )\n}\n\nexport default CartItem\n","/home/dobanoi/Desktop/e-commerce/client/src/component/shared/Toast/Toast.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/api/historyApi.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/hooks/useForm.js",[],"/home/dobanoi/Desktop/e-commerce/client/src/component/CartItem/CartItem.element.js",[],{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":34,"column":3,"nodeType":"244","messageId":"245","endLine":37,"endColumn":4},{"ruleId":"246","severity":1,"message":"247","line":106,"column":6,"nodeType":"248","endLine":106,"endColumn":16,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":21,"column":27,"nodeType":"252","messageId":"253","endLine":21,"endColumn":29},{"ruleId":"254","severity":1,"message":"255","line":6,"column":10,"nodeType":"256","messageId":"257","endLine":6,"endColumn":21},{"ruleId":"254","severity":1,"message":"258","line":12,"column":24,"nodeType":"256","messageId":"257","endLine":12,"endColumn":30},{"ruleId":"254","severity":1,"message":"259","line":12,"column":32,"nodeType":"256","messageId":"257","endLine":12,"endColumn":43},{"ruleId":"254","severity":1,"message":"260","line":4,"column":17,"nodeType":"256","messageId":"257","endLine":4,"endColumn":25},{"ruleId":"246","severity":1,"message":"261","line":22,"column":6,"nodeType":"248","endLine":22,"endColumn":14,"suggestions":"262"},{"ruleId":"254","severity":1,"message":"263","line":3,"column":17,"nodeType":"256","messageId":"257","endLine":3,"endColumn":26},{"ruleId":"254","severity":1,"message":"264","line":7,"column":5,"nodeType":"256","messageId":"257","endLine":7,"endColumn":14},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"no-extend-native","Number prototype is read only, properties should not be added.","AssignmentExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkAdmin', 'fetchAllCategory', 'fetchCart', 'fetchProducts', 'token', and 'verify'. Either include them or remove the dependency array.","ArrayExpression",["267"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'BtnCheckOut' is defined but never used.","Identifier","unusedVar","'BtnAdd' is defined but never used.","'CheckOutBtn' is defined but never used.","'ReactDOM' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["268"],"'useEffect' is defined but never used.","'BtnDelete' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},"Update the dependencies array to be: [checkAdmin, fetchAllCategory, fetchCart, fetchProducts, isLogged, token, verify]",{"range":"273","text":"274"},"Update the dependencies array to be: [data, params]",{"range":"275","text":"276"},[2732,2742],"[checkAdmin, fetchAllCategory, fetchCart, fetchProducts, isLogged, token, verify]",[606,614],"[data, params]"]